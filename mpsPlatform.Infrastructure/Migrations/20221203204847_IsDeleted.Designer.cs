// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using mpsPlatform.Infrastructure.Data;

#nullable disable

namespace mpsPlatform.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20221203204847_IsDeleted")]
    partial class IsDeleted
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "dea12856-c198-4129-b3f3-b893d8395082",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "20e4d656-5f06-44cb-92ff-c0537464da88",
                            Email = "admin@mpsPlatform.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            NormalizedEmail = "admin@mpsplatform.com",
                            NormalizedUserName = "ADMIN",
                            PasswordHash = "AQAAAAEAACcQAAAAEF733o+SC4K67ONFEgFnEsMnKwEPhUM+T3yIekz9lYkrNf9mWh712CHb1OqveyjDcg==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "109a9938-6ab4-47c0-8770-c8d7010e986c",
                            TwoFactorEnabled = false,
                            UserName = "admin"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("mpsPlatform.Infrastructure.Data.Models.ЕquipmentModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("EquimpentType")
                        .HasColumnType("int");

                    b.Property<string>("ImageUrl")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("ManufacturerId")
                        .HasColumnType("int");

                    b.Property<int>("MaxPaperType")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PartNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.HasIndex("ManufacturerId");

                    b.ToTable("ЕquipmentModels");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            EquimpentType = 0,
                            IsDeleted = false,
                            ManufacturerId = 1,
                            MaxPaperType = 0,
                            Name = "VersaLink B610dn",
                            PartNumber = "B610V_DN"
                        },
                        new
                        {
                            Id = 2,
                            EquimpentType = 0,
                            IsDeleted = false,
                            ManufacturerId = 1,
                            MaxPaperType = 0,
                            Name = "VersaLink B405",
                            PartNumber = "B405V_DN"
                        },
                        new
                        {
                            Id = 3,
                            EquimpentType = 1,
                            IsDeleted = false,
                            ManufacturerId = 1,
                            MaxPaperType = 1,
                            Name = "AltaLink C8035",
                            PartNumber = "C8001V_T_097S04830"
                        },
                        new
                        {
                            Id = 4,
                            EquimpentType = 1,
                            IsDeleted = false,
                            ManufacturerId = 1,
                            MaxPaperType = 1,
                            Name = "AltaLink C8155",
                            PartNumber = "C8102V_F_097S05045"
                        },
                        new
                        {
                            Id = 5,
                            EquimpentType = 0,
                            IsDeleted = false,
                            ManufacturerId = 2,
                            MaxPaperType = 0,
                            Name = "LaserJet M609dn",
                            PartNumber = "K0Q21A"
                        },
                        new
                        {
                            Id = 6,
                            EquimpentType = 0,
                            IsDeleted = false,
                            ManufacturerId = 1,
                            MaxPaperType = 0,
                            Name = "VersaLink B605",
                            PartNumber = "B605V_DN"
                        });
                });

            modelBuilder.Entity("mpsPlatform.Infrastructure.Data.Models.Contract", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ContractNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("Contract");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ContractNumber = "CTR-003263/ 2022",
                            CustomerId = 2,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 2,
                            ContractNumber = "CTR-004452/ 2021",
                            CustomerId = 1,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 3,
                            ContractNumber = "CTR-002526/ 2019",
                            CustomerId = 2,
                            IsDeleted = false
                        });
                });

            modelBuilder.Entity("mpsPlatform.Infrastructure.Data.Models.Counter", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ColorA3")
                        .HasColumnType("int");

                    b.Property<int>("ColorA4")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateOfCounter")
                        .HasColumnType("datetime2");

                    b.Property<int>("MonochromeA3")
                        .HasColumnType("int");

                    b.Property<int>("MonochromeA4")
                        .HasColumnType("int");

                    b.Property<int>("SerialNumberId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SerialNumberId");

                    b.ToTable("Counters");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ColorA3 = 4670,
                            ColorA4 = 336300,
                            DateOfCounter = new DateTime(2022, 8, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MonochromeA3 = 900,
                            MonochromeA4 = 95000,
                            SerialNumberId = 1
                        },
                        new
                        {
                            Id = 2,
                            ColorA3 = 390,
                            ColorA4 = 35800,
                            DateOfCounter = new DateTime(2022, 8, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MonochromeA3 = 10,
                            MonochromeA4 = 4700,
                            SerialNumberId = 2
                        },
                        new
                        {
                            Id = 3,
                            ColorA3 = 0,
                            ColorA4 = 0,
                            DateOfCounter = new DateTime(2022, 8, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MonochromeA3 = 0,
                            MonochromeA4 = 58400,
                            SerialNumberId = 3
                        },
                        new
                        {
                            Id = 4,
                            ColorA3 = 0,
                            ColorA4 = 0,
                            DateOfCounter = new DateTime(2022, 9, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MonochromeA3 = 0,
                            MonochromeA4 = 94700,
                            SerialNumberId = 4
                        },
                        new
                        {
                            Id = 5,
                            ColorA3 = 0,
                            ColorA4 = 0,
                            DateOfCounter = new DateTime(2022, 9, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MonochromeA3 = 0,
                            MonochromeA4 = 232100,
                            SerialNumberId = 5
                        },
                        new
                        {
                            Id = 6,
                            ColorA3 = 0,
                            ColorA4 = 0,
                            DateOfCounter = new DateTime(2022, 7, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MonochromeA3 = 0,
                            MonochromeA4 = 137200,
                            SerialNumberId = 6
                        });
                });

            modelBuilder.Entity("mpsPlatform.Infrastructure.Data.Models.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsDeleted = false,
                            Name = "Metal Construct PLC"
                        },
                        new
                        {
                            Id = 2,
                            IsDeleted = false,
                            Name = "Ring Ltd"
                        });
                });

            modelBuilder.Entity("mpsPlatform.Infrastructure.Data.Models.InstallerMan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("InstallersPeople");
                });

            modelBuilder.Entity("mpsPlatform.Infrastructure.Data.Models.Location", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<string>("EquimpentLocation")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("Locations");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CustomerId = 2,
                            EquimpentLocation = "Managers",
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 2,
                            CustomerId = 2,
                            EquimpentLocation = "PPR",
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 3,
                            CustomerId = 2,
                            EquimpentLocation = "Med.center",
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 4,
                            CustomerId = 2,
                            EquimpentLocation = "Capture",
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 5,
                            CustomerId = 2,
                            EquimpentLocation = "Handwork",
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 6,
                            CustomerId = 1,
                            EquimpentLocation = "Админ.сграда ет.1",
                            IsDeleted = false
                        });
                });

            modelBuilder.Entity("mpsPlatform.Infrastructure.Data.Models.Manufacturer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.ToTable("Manufacturers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsDeleted = false,
                            Name = "Xerox"
                        },
                        new
                        {
                            Id = 2,
                            IsDeleted = false,
                            Name = "HP"
                        });
                });

            modelBuilder.Entity("mpsPlatform.Infrastructure.Data.Models.SerialNumber", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ContractId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("LocationId")
                        .HasColumnType("int");

                    b.Property<decimal>("PriceColorA3")
                        .HasPrecision(10, 8)
                        .HasColumnType("decimal(10,8)");

                    b.Property<decimal>("PriceColorA4")
                        .HasPrecision(10, 8)
                        .HasColumnType("decimal(10,8)");

                    b.Property<decimal>("PriceMonochromeA3")
                        .HasPrecision(10, 8)
                        .HasColumnType("decimal(10,8)");

                    b.Property<decimal>("PriceMonochromeA4")
                        .HasPrecision(10, 8)
                        .HasColumnType("decimal(10,8)");

                    b.Property<int>("ЕquipmentModelId")
                        .HasColumnType("int");

                    b.Property<string>("ЕquipmentSerialNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.HasIndex("ContractId");

                    b.HasIndex("LocationId");

                    b.HasIndex("ЕquipmentModelId");

                    b.ToTable("SerialNumbers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ContractId = 1,
                            IsDeleted = false,
                            LocationId = 1,
                            PriceColorA3 = 0.1722m,
                            PriceColorA4 = 0.0818m,
                            PriceMonochromeA3 = 0.00216m,
                            PriceMonochromeA4 = 0.00108m,
                            ЕquipmentModelId = 3,
                            ЕquipmentSerialNumber = "3717622919"
                        },
                        new
                        {
                            Id = 2,
                            ContractId = 1,
                            IsDeleted = false,
                            LocationId = 2,
                            PriceColorA3 = 0.1722m,
                            PriceColorA4 = 0.0818m,
                            PriceMonochromeA3 = 0.00216m,
                            PriceMonochromeA4 = 0.00108m,
                            ЕquipmentModelId = 4,
                            ЕquipmentSerialNumber = "3774403743"
                        },
                        new
                        {
                            Id = 3,
                            ContractId = 1,
                            IsDeleted = false,
                            LocationId = 3,
                            PriceColorA3 = 0m,
                            PriceColorA4 = 0m,
                            PriceMonochromeA3 = 0m,
                            PriceMonochromeA4 = 0.0189m,
                            ЕquipmentModelId = 2,
                            ЕquipmentSerialNumber = "3719467309"
                        },
                        new
                        {
                            Id = 4,
                            ContractId = 3,
                            IsDeleted = false,
                            LocationId = 4,
                            PriceColorA3 = 0m,
                            PriceColorA4 = 0m,
                            PriceMonochromeA3 = 0m,
                            PriceMonochromeA4 = 0.02m,
                            ЕquipmentModelId = 5,
                            ЕquipmentSerialNumber = "CNBVK9317X"
                        },
                        new
                        {
                            Id = 5,
                            ContractId = 3,
                            IsDeleted = false,
                            LocationId = 6,
                            PriceColorA3 = 0m,
                            PriceColorA4 = 0m,
                            PriceMonochromeA3 = 0m,
                            PriceMonochromeA4 = 0.02m,
                            ЕquipmentModelId = 1,
                            ЕquipmentSerialNumber = "3394734267"
                        },
                        new
                        {
                            Id = 6,
                            ContractId = 2,
                            IsDeleted = false,
                            LocationId = 6,
                            PriceColorA3 = 0m,
                            PriceColorA4 = 0m,
                            PriceMonochromeA3 = 0m,
                            PriceMonochromeA4 = 0.018m,
                            ЕquipmentModelId = 6,
                            ЕquipmentSerialNumber = "3394976619"
                        });
                });

            modelBuilder.Entity("mpsPlatform.Infrastructure.Data.Models.SparePart", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("PartNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("Resource")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("SpareParts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsDeleted = false,
                            Name = "cartridge",
                            PartNumber = "CF237YC",
                            Resource = 37000
                        },
                        new
                        {
                            Id = 2,
                            IsDeleted = false,
                            Name = "Maintenance Kit",
                            PartNumber = "L0H25A",
                            Resource = 225000
                        },
                        new
                        {
                            Id = 3,
                            IsDeleted = false,
                            Name = "black cartridge",
                            PartNumber = "006R01701",
                            Resource = 26000
                        },
                        new
                        {
                            Id = 4,
                            IsDeleted = false,
                            Name = "cyan cartridge",
                            PartNumber = "006R01702",
                            Resource = 15000
                        },
                        new
                        {
                            Id = 5,
                            IsDeleted = false,
                            Name = "magenta cartridge",
                            PartNumber = "006R01703",
                            Resource = 15000
                        },
                        new
                        {
                            Id = 6,
                            IsDeleted = false,
                            Name = "yellow cartridge",
                            PartNumber = "006R01704",
                            Resource = 15000
                        },
                        new
                        {
                            Id = 7,
                            IsDeleted = false,
                            Name = "drum",
                            PartNumber = "013R00662",
                            Resource = 126000
                        },
                        new
                        {
                            Id = 8,
                            IsDeleted = false,
                            Name = "black cartridge",
                            PartNumber = "006R01758",
                            Resource = 59000
                        },
                        new
                        {
                            Id = 9,
                            IsDeleted = false,
                            Name = "cyan cartridge",
                            PartNumber = "006R01759",
                            Resource = 28000
                        },
                        new
                        {
                            Id = 10,
                            IsDeleted = false,
                            Name = "magenta cartridge",
                            PartNumber = "006R01760",
                            Resource = 28000
                        },
                        new
                        {
                            Id = 11,
                            IsDeleted = false,
                            Name = "yellow cartridge",
                            PartNumber = "006R01761",
                            Resource = 28000
                        },
                        new
                        {
                            Id = 12,
                            IsDeleted = false,
                            Name = "drum",
                            PartNumber = "013R00681",
                            Resource = 180000
                        },
                        new
                        {
                            Id = 13,
                            IsDeleted = false,
                            Name = "cartridge",
                            PartNumber = "106R03585",
                            Resource = 37000
                        },
                        new
                        {
                            Id = 14,
                            IsDeleted = false,
                            Name = "drum",
                            PartNumber = "101R00554",
                            Resource = 24000
                        });
                });

            modelBuilder.Entity("mpsPlatform.Infrastructure.Data.Models.SparePartModel", b =>
                {
                    b.Property<int>("SparePartId")
                        .HasColumnType("int");

                    b.Property<int>("ЕquipmentModelId")
                        .HasColumnType("int");

                    b.HasKey("SparePartId", "ЕquipmentModelId");

                    b.HasIndex("ЕquipmentModelId");

                    b.ToTable("SparePartsModels");

                    b.HasData(
                        new
                        {
                            SparePartId = 1,
                            ЕquipmentModelId = 5
                        },
                        new
                        {
                            SparePartId = 2,
                            ЕquipmentModelId = 5
                        },
                        new
                        {
                            SparePartId = 3,
                            ЕquipmentModelId = 3
                        },
                        new
                        {
                            SparePartId = 4,
                            ЕquipmentModelId = 3
                        },
                        new
                        {
                            SparePartId = 5,
                            ЕquipmentModelId = 3
                        },
                        new
                        {
                            SparePartId = 6,
                            ЕquipmentModelId = 3
                        },
                        new
                        {
                            SparePartId = 7,
                            ЕquipmentModelId = 3
                        },
                        new
                        {
                            SparePartId = 8,
                            ЕquipmentModelId = 4
                        },
                        new
                        {
                            SparePartId = 9,
                            ЕquipmentModelId = 4
                        },
                        new
                        {
                            SparePartId = 10,
                            ЕquipmentModelId = 4
                        },
                        new
                        {
                            SparePartId = 11,
                            ЕquipmentModelId = 4
                        },
                        new
                        {
                            SparePartId = 12,
                            ЕquipmentModelId = 4
                        },
                        new
                        {
                            SparePartId = 13,
                            ЕquipmentModelId = 2
                        },
                        new
                        {
                            SparePartId = 14,
                            ЕquipmentModelId = 2
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("mpsPlatform.Infrastructure.Data.Models.ЕquipmentModel", b =>
                {
                    b.HasOne("mpsPlatform.Infrastructure.Data.Models.Manufacturer", "Manufacturer")
                        .WithMany("ЕquipmentModels")
                        .HasForeignKey("ManufacturerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Manufacturer");
                });

            modelBuilder.Entity("mpsPlatform.Infrastructure.Data.Models.Contract", b =>
                {
                    b.HasOne("mpsPlatform.Infrastructure.Data.Models.Customer", "Customer")
                        .WithMany("Contracts")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("mpsPlatform.Infrastructure.Data.Models.Counter", b =>
                {
                    b.HasOne("mpsPlatform.Infrastructure.Data.Models.SerialNumber", "SerialNumber")
                        .WithMany("Counters")
                        .HasForeignKey("SerialNumberId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SerialNumber");
                });

            modelBuilder.Entity("mpsPlatform.Infrastructure.Data.Models.Location", b =>
                {
                    b.HasOne("mpsPlatform.Infrastructure.Data.Models.Customer", "Customer")
                        .WithMany("Locations")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("mpsPlatform.Infrastructure.Data.Models.SerialNumber", b =>
                {
                    b.HasOne("mpsPlatform.Infrastructure.Data.Models.Contract", "Contract")
                        .WithMany("SerialNumbers")
                        .HasForeignKey("ContractId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("mpsPlatform.Infrastructure.Data.Models.Location", "Location")
                        .WithMany("SerialNumbers")
                        .HasForeignKey("LocationId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.HasOne("mpsPlatform.Infrastructure.Data.Models.ЕquipmentModel", "ЕquipmentModel")
                        .WithMany("SerialNumbers")
                        .HasForeignKey("ЕquipmentModelId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.Navigation("Contract");

                    b.Navigation("Location");

                    b.Navigation("ЕquipmentModel");
                });

            modelBuilder.Entity("mpsPlatform.Infrastructure.Data.Models.SparePartModel", b =>
                {
                    b.HasOne("mpsPlatform.Infrastructure.Data.Models.SparePart", "SparePart")
                        .WithMany("SparePartsModels")
                        .HasForeignKey("SparePartId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("mpsPlatform.Infrastructure.Data.Models.ЕquipmentModel", "ЕquipmentModel")
                        .WithMany("SparePartsModels")
                        .HasForeignKey("ЕquipmentModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SparePart");

                    b.Navigation("ЕquipmentModel");
                });

            modelBuilder.Entity("mpsPlatform.Infrastructure.Data.Models.ЕquipmentModel", b =>
                {
                    b.Navigation("SerialNumbers");

                    b.Navigation("SparePartsModels");
                });

            modelBuilder.Entity("mpsPlatform.Infrastructure.Data.Models.Contract", b =>
                {
                    b.Navigation("SerialNumbers");
                });

            modelBuilder.Entity("mpsPlatform.Infrastructure.Data.Models.Customer", b =>
                {
                    b.Navigation("Contracts");

                    b.Navigation("Locations");
                });

            modelBuilder.Entity("mpsPlatform.Infrastructure.Data.Models.Location", b =>
                {
                    b.Navigation("SerialNumbers");
                });

            modelBuilder.Entity("mpsPlatform.Infrastructure.Data.Models.Manufacturer", b =>
                {
                    b.Navigation("ЕquipmentModels");
                });

            modelBuilder.Entity("mpsPlatform.Infrastructure.Data.Models.SerialNumber", b =>
                {
                    b.Navigation("Counters");
                });

            modelBuilder.Entity("mpsPlatform.Infrastructure.Data.Models.SparePart", b =>
                {
                    b.Navigation("SparePartsModels");
                });
#pragma warning restore 612, 618
        }
    }
}
